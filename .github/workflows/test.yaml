name: React Native CI/CD Workflow

# Desencadenadores (triggers)
on:
  push:
    branches:
      - master  # Puedes cambiar a otra rama si es necesario
      - feature/componentes-UI
      - feature/navegacion-pantallas
      - feature/animaciones-funcionalidades
      - feature/apis-logica-negocio
      - feature/limpieza-y-optimizacion-codigo
      - feature/mejoras-rendimiento
      - feature/pantallas-principales
      - feature/pruebas-y-optimizacion
  pull_request:
    branches:
      - main
      - feature/componentes-UI
      - feature/navegacion-pantallas
      - feature/animaciones-funcionalidades
      - feature/apis-logica-negocio
      - feature/limpieza-y-optimizacion-codigo
      - feature/mejoras-rendimiento
      - feature/pantallas-principales
      - feature/pruebas-y-optimizacion
  workflow_dispatch:  # Permite ejecutar el flujo manualmente

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]  # Puedes ajustar las versiones de Node.js si lo prefieres
        os: [ubuntu-latest, macos-latest]  # Usar macos para iOS, Ubuntu para Android

    steps:
    # 1. Checkout del código del repositorio
    - uses: actions/checkout@v2

    # 2. Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    # 3. Instalar dependencias del proyecto
    - name: Install dependencies
      run: npm install

    # 4. Instalar dependencias de CocoaPods (solo si estás en macOS para iOS)
    - name: Install CocoaPods
      if: runner.os == 'macOS'
      run: |
        cd ios
        pod install
        cd ..

    # 5. Ejecutar pruebas con Jest
    - name: Run tests
      run: npm test

    # 6. Build de la aplicación Android (y iOS si usas macOS)
    - name: Build Android
      if: runner.os == 'ubuntu-latest'
      run: |
        cd android
        ./gradlew assembleDebug

    - name: Build iOS
      if: runner.os == 'macos-latest'
      run: |
        cd ios
        xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.0' clean build
   # 7. Upload Android build artifacts (si quieres subir el APK a algún lugar)
    - name: Upload APK
      if: runner.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3  # Actualizado a la versión más reciente
      with:
        name: android-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk