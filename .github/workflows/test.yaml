name: React Native CI/CD Workflow

# Desencadenadores (triggers)
on:
  push:
    branches:
      - master  # Puedes cambiar a otra rama si es necesario
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Permite ejecutar el flujo manualmentee

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]  # Puedes ajustar las versiones de Node.js si lo prefieres
        os: [ubuntu-latest]  # Puedes cambiar a macos si necesitas construir para iOS

    steps:
    # 1. Checkout del código del repositorio
    - uses: actions/checkout@v2

    # 2. Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    # 3. Instalar dependencias del proyecto
    - name: Install dependencies
      run: npm install

    # 4. Instalar dependencias de CocoaPods (si estás en macOS para iOS)
    - name: Install CocoaPods
      if: runner.os == 'macOS'
      run: |
        cd ios
        pod install
        cd ..

    # 5. Ejecutar pruebas con Jest
    - name: Run tests
      run: npm test

    # 6. Build de la aplicación Android (y iOS si usas macOS)
    - name: Build Android
      run: |
        cd android
        ./gradlew assembleDebug

    # O, si quieres compilar para iOS en macOS, puedes agregar:
    # - name: Build iOS
    #   if: runner.os == 'macOS'
    #   run: |
    #     cd ios
    #     xcodebuild -workspace <tu_proyecto>.xcworkspace -scheme <tu_proyecto> -sdk iphonesimulator -derivedDataPath build

    # Puedes agregar pasos adicionales como despliegue, si es necesario.
