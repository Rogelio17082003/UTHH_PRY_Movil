name: Mobil CI/CD Workflow. 

on:
  push:
    branches:
      - master  # Puedes ajustar seg√∫n las ramas que quieras incluirr
      - feature/componentes-UI
      - feature/navegacion-pantallas
      - feature/animaciones-funcionalidades
      - feature/apis-logica-negocio
      - feature/limpieza-y-optimizacion-codigo
      - feature/mejoras-rendimiento
      - feature/pantallas-principales
      - feature/pruebas-y-optimizacion
  pull_request:
    branches:
      - master
      - feature/componentes-UI
      - feature/navegacion-pantallas
      - feature/animaciones-funcionalidades
      - feature/apis-logica-negocio
      - feature/limpieza-y-optimizacion-codigo
      - feature/mejoras-rendimiento
      - feature/pantallas-principales
      - feature/pruebas-y-optimizacion
  workflow_dispatch:  # Permite ejecutar el flujo manualmente

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16.x']  # Elige la versi√≥n de Node.js que est√©s usando en tu proyecto.

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Expo CLI
        run: npm install --global expo-cli

      - name: Install dependencies
        run: npm install

      # Validaci√≥n de TypeScript
      #- name: TypeScript Check
      #  run: npm run tsc

      # Ejecutar pruebas unitarias
    #  - name: Run tests
     #   run: npm test

      # Lint del c√≥digo
      - name: Lint code with Expo
        run: expo lint --max-warnings=0

  # Construcci√≥n para Android e iOS
  build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install dependencies
        run: npm install

      # Construcci√≥n para Android
      - name: Build APK for Android
      #  run: eas build --platform android --profile preview
        run: npx eas-cli build --platform android --profile preview
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}  # Aseg√∫rate de configurar el token en GitHub Secrets


          # notificaciones Slack
  notify_build:
    runs-on: ubuntu-latest
    needs: build
    steps:
## esto es para que mande mensaje cuando falla el    
      - name: Send Slack notification on failure
        if: failure()  # Only send notification if the build fails
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üö® Build failed for commit: ${{ github.sha }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack notification on success
        if: success()  # Only send notification if the build succeeds
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ Build succeededJob ${{ github.job }} en la ram:${{ github.ref_name }}  "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
          
  notify_test:
      runs-on: ubuntu-latest
      needs: build-and-test
      steps:
  ## esto es para que mande mensaje cuando falla el    
        - name: Send Slack notification on failure
          if: failure()  # Only send notification if the build fails
          run: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"üö® Build failed for commit: ${{ github.sha }}"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

        - name: Send Slack notification on success
          if: success()  # Only send notification if the build succeeds
          run: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"‚úÖ Build succeededJob ${{ github.job }} en la ram:${{ github.ref_name }}  "}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

     
