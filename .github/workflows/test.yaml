name: Mobil CI/CD Workflow. 

on:
  push:
    branches:
      - master  # Puedes ajustar según las ramas que quieras incluir
      - feature/componentes-UI
      - feature/navegacion-pantallas
      - feature/animaciones-funcionalidades
      - feature/apis-logica-negocio
      - feature/limpieza-y-optimizacion-codigo
      - feature/mejoras-rendimiento
      - feature/pantallas-principales
      - feature/pruebas-y-optimizacion
  pull_request:
    branches:
      - master
     
  workflow_dispatch:  # Permite ejecutar el flujo manualmente

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16.x']  # Elige la versión de Node.js que estés usando en tu proyecto.

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Expo CLI
        run: npm install --global expo-cli

      - name: Install dependencies
        run: npm install

      # Validación de TypeScript
      #- name: TypeScript Check
      #  run: npm run tsc

      # Ejecutar pruebas unitarias
    #  - name: Run tests
     #   run: npm test

      # Lint del código
      - name: Lint code with Expo
        run: expo lint --max-warnings=0

  # Construcción para Android e iOS
  build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master'  # Ejecutar solo en la rama master
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install dependencies
        run: npm install

      # Construcción para Android
      - name: Build APK for Android
        run: npx eas-cli build --platform android --profile preview
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}  # Asegúrate de configurar el token en GitHub Secrets


  # Notificaciones para el job de build
  notify_build:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'  # Solo notificar si es la rama master
    steps:
      # Enviar notificación cuando falle el build
      - name: Send Slack notification on failure
        if: failure()  # Notificar solo si el build falla
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"🚨 Build failed Job: build en la rama: ${{ github.ref_name }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      # Enviar notificación cuando tenga éxito el build
      - name: Send Slack notification on success
        if: success()  # Notificar solo si el build tiene éxito
        run: |
          curl -X POST -H 'Content-type: application/json' 
